#!/bin/bash
# postinst script for jicofo

set -e

case "$1" in
    configure)

        CONFIG="/etc/jitsi/jicofo/config"

	    # we don't want to regenerate config on upgrade
        OLDCONFIG="false"
        if [ -f $CONFIG ]; then
            . $CONFIG
            if [ -n "$JICOFO_HOSTNAME" ] && [ -n "$JICOFO_PORT" ] && [ -n "$JICOFO_SECRET" ] \
                && [ -n "$JICOFO_AUTH_DOMAIN" ] && [ -n "$JICOFO_AUTH_PASSWORD" ]; then
                OLDCONFIG="true"
            fi
        fi

        # generate config on new install
        if [ "$OLDCONFIG" = "false" ]; then

            # try to get host from jitsi-videobridge
            . /etc/jitsi/videobridge/config

            # debconf hostname question
            . /usr/share/debconf/confmodule

	        # the default vars
            db_set jicofo/jicofo-hostname $JVB_HOSTNAME

            JICOFO_HOSTNAME="$JVB_HOSTNAME"
            # 8-chars random secret, alternative to pwgen 8
            JICOFO_SECRET=`head -c 8 /dev/urandom | tr '\0-\377' 'a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9@@@@####'`
            JICOFO_PORT=5347
            JICOFO_AUTH_DOMAIN="auth.$JICOFO_HOSTNAME"
            JICOFO_AUTH_PASSWORD=`head -c 8 /dev/urandom | tr '\0-\377' 'a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9a-zA-Z0-9@@@@####'`
            
            # storing default
            echo '# Jitsi Conference Focus settings' > $CONFIG
            echo "JICOFO_HOSTNAME=$JICOFO_HOSTNAME" >> $CONFIG
            echo "JICOFO_SECRET=$JICOFO_SECRET" >> $CONFIG
            echo "JICOFO_PORT=$JICOFO_PORT" >> $CONFIG
            echo "JICOFO_AUTH_DOMAIN=$JICOFO_AUTH_DOMAIN" >> $CONFIG
            echo "JICOFO_AUTH_PASSWORD=$JICOFO_AUTH_PASSWORD" >> $CONFIG
            echo "JICOFO_OPTS=\"\"" >> $CONFIG

            # and we're done with debconf
            db_stop
        fi

        # we don't want to start the daemon as root
        if ! getent passwd jicofo > /dev/null ; then
            adduser --system --group --shell /bin/bash --disabled-password \
                --home /usr/share/jicofo jicofo
        fi

        # we create home folder only if it doesn't exist
        if [ ! -d /usr/share/jicofo ]; then
            mkdir -p /usr/share/jicofo

            # ensure we don't overwrite previously existing .properties
            if [ ! -d /usr/share/jicofo/.sip-communicator ]; then
                mkdir /usr/share/jicofo/.sip-communicator
                cp /usr/share/doc/jicofo/sip-communicator.properties /usr/share/jicofo/.sip-communicator/
            fi
        fi

        # we claim the home folder of jicofo in case it is owned by someone else
        OWNER=$(stat -c '%U' /usr/share/jicofo)
        GROUP=$(stat -c '%G' /usr/share/jicofo)
        if ! dpkg-statoverride --list /usr/share/jicofo/* >/dev/null && [ "$OWNER:$GROUP" != "jicofo:jicofo" ]; then
            chown -R jicofo:jicofo /usr/share/jicofo
            OWNER=jicofo
            GROUP=jicofo
        fi

        # die logz
        if [ ! -d /var/log/jitsi/jicofo ]; then
            mkdir -p /var/log/jitsi/jicofo
        fi
        chown -R jicofo:jicofo /var/log/jitsi/jicofo

        # ensure focus is not running - it will be started at the end
        if [ "$(pidof java)" ]; then
            invoke-rc.d jicofo stop || true
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
